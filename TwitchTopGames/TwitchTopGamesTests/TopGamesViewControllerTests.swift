//
//  TopGamesViewControllerTests.swift
//  TwitchTopGames
//
//  Created by mazza on 20/09/19.
//  Copyright (c) 2019 fbassi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TwitchTopGames
import XCTest

class TopGamesViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: TopGamesViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupTopGamesViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupTopGamesViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "TopGamesViewController") as? TopGamesViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class TopGamesBusinessLogicSpy: TopGamesBusinessLogic {
        var getTopGamesCalled = false
        func getTopGames(request: TopGames.Get.Request) {
            getTopGamesCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldGetTopGamesWhenViewIsLoaded() {
        // Given
        let spy = TopGamesBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Then
        XCTAssertTrue(spy.getTopGamesCalled, "viewDidLoad() should ask the interactor to do getTopGames")
    }
    
    func testDisplayTopGamesWithNilViewModel() {
        // Given
        let viewModel: TopGames.Get.ViewModel? = nil
        
        // When
        loadView()
        sut.displayTopGames(viewModel: viewModel)
        
        // Then
        XCTAssertEqual(sut.tableView?.dataSource == nil, true, "displayTopGames(viewModel:nil) should display table view placeholder")
    }
}
